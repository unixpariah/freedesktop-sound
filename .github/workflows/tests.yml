name: Rust Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy, rustfmt, llvm-tools-preview
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sound-theme-freedesktop oxygen-sounds deepin-sound-theme
      
      - name: Run tests with coverage
        env:
          RUSTFLAGS: -Cinstrument-coverage
          LLVM_PROFILE_FILE: grcov-%p-%m.profraw
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose
      
      - name: Install grcov
        run: cargo install grcov
      
      - name: Generate coverage report
        run: |
          grcov $(find . -name "grcov-*.profraw" -print) \
            --branch \
            --ignore-not-existing \
            --binary-path ./target/debug/ \
            -s . \
            -t lcov \
            --ignore "/*" \
            -o lcov.info
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./lcov.info
          fail_ci_if_error: true
      
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
